
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/data_generation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_data_generation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_data_generation.py:


Generating and Visualizing Signal Data
======================================

This example demonstrates how to:
  1. Generate synthetic signals with up to 3 Gaussian pulses.
  2. Compute a Region of Interest (ROI) mask based on pulse positions.
  3. Visualize signals with peak positions, amplitudes, and the ROI mask.

.. GENERATED FROM PYTHON SOURCE LINES 12-14

Imports
-------

.. GENERATED FROM PYTHON SOURCE LINES 14-17

.. code-block:: Python

    from DeepPeak.signals import SignalDatasetGenerator
    from DeepPeak import kernel








.. GENERATED FROM PYTHON SOURCE LINES 18-24

Generate Synthetic Signal Dataset
---------------------------------

We generate a dataset with `NUM_PEAKS` Gaussian pulses per signal.
The peak amplitudes, positions, and widths are randomly chosen within
specified ranges.

.. GENERATED FROM PYTHON SOURCE LINES 24-45

.. code-block:: Python


    NUM_PEAKS = 3
    SEQUENCE_LENGTH = 200
    sample_count = 12

    generator = SignalDatasetGenerator(n_samples=sample_count, sequence_length=SEQUENCE_LENGTH)

    kernel = kernel.Lorentzian(
        amplitude=(10, 300),  # Amplitude range
        position=(0.3, 0.7),  # Peak position range
        width=0.02,
    )

    dataset = generator.generate(
        kernel=kernel,
        n_peaks=(3, 3),
        noise_std=0,  # Add some noise
        categorical_peak_count=False,
    )

    dataset.plot(number_of_columns=3, number_of_samples=9)



.. image-sg:: /gallery/images/sphx_glr_data_generation_001.png
   :alt: Predicted ROI (Sample 0), Predicted ROI (Sample 1), Predicted ROI (Sample 2), Predicted ROI (Sample 3), Predicted ROI (Sample 4), Predicted ROI (Sample 5), Predicted ROI (Sample 6), Predicted ROI (Sample 7), Predicted ROI (Sample 8)
   :srcset: /gallery/images/sphx_glr_data_generation_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 2400x900 with 9 Axes>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.109 seconds)


.. _sphx_glr_download_gallery_data_generation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: data_generation.ipynb <data_generation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: data_generation.py <data_generation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: data_generation.zip <data_generation.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
